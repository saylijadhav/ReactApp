{"version":3,"file":"static/js/884.11cecf8c.chunk.js","mappings":"qNACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,Y,SCF9C,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC6DnI,EAvDkB,SAACH,GAEjB,OAAiCI,EAAAA,EAAAA,WAAS,GAA1C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACE,UAAC,EAAAE,SAAD,YACE,SAAC,KAAD,CAAQC,KAAMN,EAAYO,QAAS,SAACC,GAAD,MACjC,yEACF,SAAC,EAAD,WACA,kBAAMC,QAVa,WACrBR,GAAc,GACdS,QAAQC,IAAI,UAQuBf,UAAWC,EAAce,SAxB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAgB9C,UACGvB,EAAM2B,YACL,gBAAK1B,UAAWC,EAAhB,UACE,SAAC0B,EAAA,EAAD,OAIJ,iBAAK3B,UAAWC,EAAhB,WACE,kBAAO2B,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAEtC,iBAAKN,UAAWC,EAAhB,WACE,kBAAO2B,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,QAEpC,gBAAKR,UAAWC,EAAhB,UACE,mBAAQgC,QA9BY,WAC1B5B,GAAc,IA6BgCL,UAAU,MAAlD,kC,kBCjCV,EAhBe,WACX,OAA2BkC,EAAAA,EAAAA,GAAQC,EAAAA,IAA5BC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OACbC,GAAQC,EAAAA,EAAAA,OACdC,EAAAA,EAAAA,YAAU,WACM,cAATH,GACCC,EAAQG,KAAK,aAEnB,CAACJ,EAAOC,IAKV,OACI,SAAC,EAAD,CAAWZ,UAAoB,YAATW,EAAqBd,WALzB,SAACmB,GACnBN,EAAYM,GACZ5B,QAAQC,IAAI2B","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__PqqIr\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__fShBT\",\"loading\":\"QuoteForm_loading__8uz5O\",\"control\":\"QuoteForm_control__NqODu\",\"actions\":\"QuoteForm_actions__xMwLn\"};","import { useRef,useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isEntering,setIsEntering]=useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const finishEnteringHandler=()=>{\n    setIsEntering(false);\n  };\n\n  const formFocusHandler=()=>{\n    setIsEntering(true);\n    console.log('focus');\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location)=>\n        'Are you sure you want to leave? All your entered data will be lost'} />\n      <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nconst NewQuote=()=>{\r\n    const {sendRequest,status}=useHttp(addQuote);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(status==='completed'){\r\n            history.push('/quotes');\r\n        }\r\n    },[status,history])\r\n    const addQuoteHandler=(quoteData)=>{\r\n        sendRequest(quoteData);\r\n        console.log(quoteData);\r\n    }\r\n    return (\r\n        <QuoteForm isLoading={status==='pending'}  onAddQuote={addQuoteHandler} />\r\n    )\r\n}\r\nexport default NewQuote;"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","console","log","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}